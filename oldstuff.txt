  /* ===== WORK SECTION ===== */
.work .text-center p {
  font-size: var(--font-size-xl);
  color: var(--color-secondary);
  max-width: var(--container-md);
  margin: 0 auto;
}

.work-card img {
  width: 100%;
  height: var(--image-card);
  object-fit: cover;
  border-radius: var(--radius-md);
  margin-bottom: var(--space-md);
}

.work-card .flex {
  margin-bottom: var(--space-2);
}

.work-card .text--xs {
  color: var(--color-secondary);
  font-weight: var(--font-weight-medium);
}

.work-card .text--small {
  color: var(--color-secondary);
  margin-bottom: var(--space-2);
  font-style: italic;
}






  
  
  
  
  

/* ************************** */
/* ===== FEATURED WORK SECTION ===== */
/* ************************** */
.work-section {
  background: #fafaf9;
}

.work-intro {
  font-size: var(--font-size-xl);
  color: var(--color-secondary);
  max-width: var(--container-md);
  margin: 0 auto;
}

.work-grid {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-lg);
  justify-content: center;
}

.work-card {
  width: var(--component-card);
}

.work-card-image-container {
  position: relative;
  overflow: hidden;
  border-radius: var(--radius-md);
}

.work-card-image {
  width: 100%;
  height: var(--image-card);
  object-fit: cover;
  border-radius: var(--radius-md);
}

.work-card-content {
  padding: var(--space-md) 0;
}

.work-card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-2);
}

.work-card-year {
  font-size: var(--font-size-xs);
  color: var(--color-secondary);
  font-weight: var(--font-weight-medium);
}

.work-card-client {
  font-size: var(--font-size-sm);
  color: var(--color-secondary);
  margin-bottom: var(--space-2);
  font-style: italic;
}

.work-toggle-button {
  cursor: pointer;
}
  
  
  
   {/* SELECTED WORK */}
      <section id="work" className="section section--alt work">

        <div className="container">

          <div className="text-center mb-lg">
            <h2>Selected Work</h2>
            <p>A selection of projects focused on AI/ML interface design, design system architecture, and scalable design patterns.</p>
          </div>

          <div className="grid grid--center">
            {displayedProjects.map((project) => (
              <article key={project.id} className="card work-card">
                <img src={project.image} alt={project.title} />
                <div>
                  <div className="flex flex--between flex--center">
                    <span className={`badge`}>{project.category} </span>
                    <span className="text--xs">{project.year}</span>
                  </div>

                  <h3>{project.title}</h3>
                  <p className="text--small">{project.client}</p>
                  <p className="text">{project.description}</p>
                  <Link to={project.link} className="link">View Case Study <ExternalLink className="link__icon" /></Link>
                </div>
              </article>
            ))}
          </div>
          <div className="text-center mt-lg">
            {!showAllProjects ? (
              <button 
                onClick={() => setShowAllProjects(true)}
                className="button-secondary button"
              >
                Show More Projects
              </button>
            ) : (
              <button 
                onClick={() => setShowAllProjects(false)}
                className="button-secondary button"
              >
                Show Less
              </button>
            )}
          </div>
        </div>
      </section>






                 <div>
              <h2>Design System<br /><span className="text-accent">Architecture</span></h2>
              <div className="text--medium">
                <p>My approach to design system architecture is rooted in systematic thinking and deep understanding of how design tokens, components, and patterns work together to create scalable, maintainable design languages.</p>

                <p>I've established token naming conventions, component architecture, and governance frameworks that enable teams to build consistent, accessible interfaces across complex product ecosystems while maintaining design integrity at scale.</p>
              </div>
            </div>



/* ************************** */
/* ===== DESIGN SYSTEM SECTION ===== */
/* ************************** */


.design-system-section {
  background: #fafaf9;
}


.design-system {
  display: flex;
  flex-direction: row;
  gap: var(--space-8);
  align-items: start;
  border: 4px solid yellow;
  background: #fafaf9;
}


.design-system h2 {
  margin-bottom: var(--space-8);
  font-size: 2.25rem;
}

.design-system p {
  font-size: var(--font-size-lg);
  color: var(--color-secondary);
}


.design-system > div:first-child {
  background: #fafaf9;
  border: 1px solid blue;

}

.design-system .card {
  border-radius: 0;
  border-left: 8px solid pink;
}

.design-system-title {
  margin-bottom: var(--space-8);
}

.design-system-description {
  font-size: var(--font-size-lg);
  color: var(--color-secondary);
}

.design-system-features {
  flex: 1;
  min-width: var(--component-min);
}

.design-system-feature {
  border-left: var(--space-1) solid var(--color-primary);
  padding-left: var(--space-8);
  margin-bottom: var(--space-6);
}

.design-system-feature:last-child {
  margin-bottom: 0;
}

.design-system-feature-title {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text);
  margin-bottom: var(--space-2);
}

.design-system-feature-description {
  color: var(--color-secondary);
}



.design-system {
  display: flex;
  flex-direction: row;
  gap: var(--space-8);
  align-items: start;
  border: 4px solid yellow;
  background: #fafaf9;
}

.design-system h2 {
  margin-bottom: var(--space-8);
  font-size: 2.25rem;
}

.design-system p {
  font-size: var(--font-size-lg);
  color: var(--color-secondary);
}

.design-system div.cards {
  display: flex;
  flex-direction: row;
  border: 2px solid green;
  gap: var(--space-8);

}

.design-system .card {
  border-radius: 0;
  border-left: 8px solid pink;
  flex: 1; /* Make cards equal width */
  min-width: 0; /* Allow cards to shrink below their content width */
}

.design-system-features {
  flex: 1;
  min-width: var(--component-min);
}